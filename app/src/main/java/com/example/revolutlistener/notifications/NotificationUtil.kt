package com.example.revolutlistener.notifications

import android.content.Context
import android.service.notification.StatusBarNotification
import androidx.core.app.NotificationCompat
import androidx.core.app.NotificationManagerCompat
import com.example.revolutlistener.R
import com.example.revolutlistener.domain.Amount
import kotlin.random.Random.Default.nextInt

private const val PAID = "Paid"
private const val CHANNEL_ID = "52"

fun isMoneySpentNotification(sbn: StatusBarNotification): Boolean {

    // TODO analyse text generated by revolut and google pay to create regex expression
    val notificationText = sbn.notification.extras["android.text"].toString()
    if (sbn.packageName == "com.example.revolutlistener") {
        return false
    }
    return true;
}

fun parseMonetaryAmount(sbn: StatusBarNotification): Amount {

    // TODO analyse text generated by revolut and google pay to create regex expression
    // Placeholder for now

    return Amount(nextInt(0, 10), nextInt(0, 100))
}

fun createUpdatedBudgetNotification(context: Context, spentToday: Amount, leftToSpend: Amount) {
    val text = "You've spent $spentToday in total today.\nYou have $leftToSpend left to spend today"
    postNotification(context, "Ledger.io",text)
}

private fun postNotification(context: Context, title: String, text: String) {
    var builder = NotificationCompat.Builder(context, CHANNEL_ID)
        .setSmallIcon(R.drawable.notification_icon)
        .setContentTitle(title)
        .setContentText(text)
//        .setStyle(
//            NotificationCompat.BigTextStyle()
//                .bigText("Revolut has spent all of your hard earned cashish")
//        )
        .setPriority(NotificationCompat.PRIORITY_DEFAULT)

    with(NotificationManagerCompat.from(context)) {
        // notificationId is a unique int for each notification that you must define
        notify(52, builder.build())
    }

}
